digraph states {
	// temperature measurement
	ShouldStartMeasurement -> ShouldStartMeasurement [label="Time has not passed"]
	ShouldStartMeasurement -> InitializeSmoothing [label="Enough time has passed"]
	InitializeSmoothing -> ShouldSmooth

	ShouldSmooth -> ShouldSmooth [label="Time has not passed"]
	ShouldSmooth -> SampleTemperature [label="Time has passed, not enough samples collected"]
	ShouldSmooth -> FillSharedState [label="Enough samples collected"]

	SampleTemperature -> PrepareNextSmoothStep
	PrepareNextSmoothStep -> ShouldSmooth
	FillSharedState -> InitWaitingForNextRound
	InitWaitingForNextRound -> ShouldStartMeasurement

	ShouldStartMeasurement [shape=diamond]
	ShouldSmooth [shape=diamond]

	// communicate with server
	ShouldStartCommunication -> ShouldStartCommunication [label="Time has not passed"]
	ShouldStartCommunication -> WakeUpEthernet [label="Enough time has passed"]

	WakeUpEthernet -> InitiateConnectionTemperature
	InitiateConnectionTemperature -> WasConnectionCompletedTemperature

	WasConnectionCompletedTemperature -> RecvSendPackets -> WasConnectionCompletedTemperature [style=dashed]
	WasConnectionCompletedTemperature -> PowerDownEthernet [label="Connection timeout, something went wrong"]
	WasConnectionCompletedTemperature -> WasConnectionCompletedTemperature [label="Data not send yet"]
	WasConnectionCompletedTemperature -> InitiateConnectionSchedule [label="Data was send"]

	InitiateConnectionSchedule -> WasConnectionCompletedSchedule

	WasConnectionCompletedSchedule -> RecvSendPackets -> WasConnectionCompletedSchedule [style=dashed]
	WasConnectionCompletedSchedule -> PowerDownEthernet [label="Connection timeout, something went wrong"]
	WasConnectionCompletedSchedule -> WasConnectionCompletedSchedule [label="Data not received yet"]
	WasConnectionCompletedSchedule -> FillSharedScheduleState [label="Data was received"]

	FillSharedScheduleState -> PowerDownEthernet
	PowerDownEthernet -> InitNextCommunicationRound -> ShouldStartCommunication


	ShouldStartCommunication [shape=diamond]
	WasConnectionCompletedTemperature [shape=diamond]
	WasConnectionCompletedSchedule [shape=diamond]
	// execute schedule

}
