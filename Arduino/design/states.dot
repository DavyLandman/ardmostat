digraph states {
	// temperature measurement
	ShouldStartMeasurement -> ShouldStartMeasurement [label="Time has not passed"]
	ShouldStartMeasurement -> InitializeSmoothing [label="Enough time has passed"]
	InitializeSmoothing -> ShouldSmooth

	ShouldSmooth -> ShouldSmooth [label="Time has not passed"]
	ShouldSmooth -> SampleTemperature [label="Time has passed, not enough samples collected"]
	ShouldSmooth -> FillSharedState [label="Enough samples collected"]

	SampleTemperature -> PrepareNextSmoothStep
	PrepareNextSmoothStep -> ShouldSmooth
	FillSharedState -> InitWaitingForNextRound
	InitWaitingForNextRound -> ShouldStartMeasurement

	ShouldStartMeasurement [shape=diamond]
	ShouldSmooth [shape=diamond]

	// communicate with server
	WaitingForNextCommunication -> ShouldStartCommunication
	ShouldStartCommunication -> WaitingForNextCommunication [label="Time has not passed"]
	ShouldStartCommunication -> StartCommunication [label="Enough time has passed"]
	StartCommunication -> SendTemperatureData
	SendTemperatureData -> WaitingForTemperatureSend
	WaitingForTemperatureSend -> CommunicationError [label="Timeout or	other errors"]
	WaitingForTemperatureSend -> TemperatureSend
	TemperatureSend -> RequestSchedule
	RequestSchedule -> WaitingForScheduleData
	WaitingForScheduleData -> CommunicationError [label="Timeout or	other errors"]
	WaitingForScheduleData -> ScheduleReceived
	ScheduleReceived -> WaitingForNextCommunication
	CommunicationError -> WaitingForNextCommunication 

	// execute schedule

}
